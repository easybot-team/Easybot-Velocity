plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.springwater'
version = '1.0.0'

// 设置Java版本兼容性
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// 明确指定源代码目录和包名
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
        output.resourcesDir = file("build/classes/java/main")
    }
}

// 确保编译时使用正确的包名
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-Xlint:none', '-Xpkginfo:always']
    // 禁用包名检查
    options.compilerArgs += ['-XDignore.symbol.file']
    // 添加调试信息
    options.debug = true
    options.debugOptions.debugLevel = "source,lines,vars"
}

repositories {
    mavenCentral()
    maven { url 'https://repo.papermc.io/repository/maven-public/' }
    maven { url 'https://nexus.velocitypowered.com/repository/maven-public/' }
    maven { url 'https://repo.velocitypowered.com/snapshots/' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // 使用正确的项目引用方式
    implementation project(':easybot_bridge')
    compileOnly 'com.velocitypowered:velocity-api:3.0.1'
    annotationProcessor 'com.velocitypowered:velocity-api:3.0.1'
    // 添加TOML配置文件解析库
    implementation 'com.moandjiezana.toml:toml4j:0.7.2'
    // 添加Lombok支持
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
}

shadowJar {
    archiveBaseName.set('EasyBot-Velocity')
    archiveClassifier.set('')
    archiveVersion.set('')
}

build.dependsOn shadowJar